<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>